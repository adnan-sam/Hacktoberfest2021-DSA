public class ThreeInOne {
  private int numberOfStacks = 3;
  private int stackCapacity;
  private int[] values;
  private int[] sizes;

  public ThreeInOne(int stackSize) {
    // TODO
    stackCapacity = stackSize;
    values = new int[stackSize*numberOfStacks];
    sizes=new int[numberOfStacks];
  }

  // isFull
  public boolean isFull(int stackNum) {
    // TODO
    if(sizes[stackNum]==stackCapacity)
    return true;
    else
    return false;
  }

  // isEmpty
  public boolean isEmpty(int stackNum) {
      // TODO
      if(sizes[stackNum]==0)
      return true;
      else
      return false;
  }

  // indexOfTop - this is helper method for push, pop and peek methods

  private int indexOfTop(int stackNum) {
    // TODO
        int offset=stackNum*stackCapacity;
        int size=sizes[stackNum];
        return offset+size-1;
  }

  // push
  public void push(int stackNum, int value) {
    // TODO
    if(sizes[stackNum]==stackCapacity)
    System.out.println("Stack is Full");
    else
    {
        sizes[stackNum]++;
        values[indexOfTop(stackNum)]=value;
    }
  }

  // pop
  public int pop(int stackNum) {
    // TODO
    if(sizes[stackNum]==0)
    {
        System.out.println("Stack is Empty");
        return -1;
    }
    else
    {
        int top=indexOfTop(stackNum);
        int temp=values[top];
        values[top]=0;
        sizes[stackNum]--;
        return temp;
    }
  }

  // peek

  public int peek(int stackNum) {
    // TODO
    if(sizes[stackNum]==0)
    {
        System.out.println("Stack is Empty");
        return -1;
    }
    else
    {
        return values[indexOfTop(stackNum)];
    }
  }

}
